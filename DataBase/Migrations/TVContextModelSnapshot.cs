// <auto-generated />
using DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(TVContext))]
    partial class TVContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataBase.Modelos.Generos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos", (string)null);
                });

            modelBuilder.Entity("DataBase.Modelos.Productoras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Productoras", (string)null);
                });

            modelBuilder.Entity("DataBase.Modelos.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Enlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ProductoraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoraId");

                    b.ToTable("Series", (string)null);
                });

            modelBuilder.Entity("DataBase.Modelos.SeriesGeneros", b =>
                {
                    b.Property<int>("SeriesId")
                        .HasColumnType("int");

                    b.Property<int>("GenerosId")
                        .HasColumnType("int");

                    b.HasKey("SeriesId", "GenerosId");

                    b.HasIndex("GenerosId");

                    b.ToTable("SeriesGeneros", (string)null);
                });

            modelBuilder.Entity("DataBase.Modelos.Series", b =>
                {
                    b.HasOne("DataBase.Modelos.Productoras", "Productora")
                        .WithMany("Series")
                        .HasForeignKey("ProductoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Productora");
                });

            modelBuilder.Entity("DataBase.Modelos.SeriesGeneros", b =>
                {
                    b.HasOne("DataBase.Modelos.Generos", "Generos")
                        .WithMany("SeriesGeneros")
                        .HasForeignKey("GenerosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.Modelos.Series", "Series")
                        .WithMany("SeriesGeneros")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Generos");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("DataBase.Modelos.Generos", b =>
                {
                    b.Navigation("SeriesGeneros");
                });

            modelBuilder.Entity("DataBase.Modelos.Productoras", b =>
                {
                    b.Navigation("Series");
                });

            modelBuilder.Entity("DataBase.Modelos.Series", b =>
                {
                    b.Navigation("SeriesGeneros");
                });
#pragma warning restore 612, 618
        }
    }
}
